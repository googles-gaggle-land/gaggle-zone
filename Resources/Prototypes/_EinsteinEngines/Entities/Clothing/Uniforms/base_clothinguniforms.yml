- type: entity # For clothes that don't need suit sensors.
  parent: ClothingUniformBaseUnsensoredFlippable
  id: ClothingUniformBaseFlippable
  abstract: true
  components:
  - type: SuitSensor
  - type: DeviceNetwork
    deviceNetId: Wireless
    transmitFrequencyId: SuitSensor
  - type: WirelessNetworkConnection
    range: 1200
  - type: StationLimitedNetwork

- type: entity # For clothes that don't need suit sensors.
  parent: ClothingUniformBaseFlippable
  id: ClothingUniformBaseFlipped
  suffix: flipped
  abstract: true
  components: # I *think* I can just disregard the components;
              # and inherit from ClothingUniformBaseFlippable
              # and ClothingUniformBaseUnsensoredFlipped but I don't want to
              # test that right now.
  - type: Foldable
    folded: true
  - type: Clothing
    equippedPrefix: flipped
  - type: Item
    heldPrefix: flipped
  - type: Sprite
    layers:
    - state: icon
      map: [ "unfoldedLayer" ]
      visible: false
    - state: icon_flipped
      map: ["foldedLayer"]
      visible: true

- type: entity # For clothes that need suit sensors.
  parent: [UnsensoredClothingUniformBase, BaseFoldable]
  id: ClothingUniformBaseUnsensoredFlippable
  abstract: true
  components:
  - type: Appearance
  - type: Foldable
    canFoldInsideContainer: true
    unfoldVerbText: fold-unrollsleeves-verb
    foldVerbText: fold-rollsleeves-verb
  - type: FoldableClothing
    foldedEquippedPrefix: flipped
    foldedHeldPrefix: flipped
  - type: Sprite
    layers:
    - state: icon
      map: [ "unfoldedLayer" ]
    - state: icon_flipped
      map: ["foldedLayer"]
      visible: false